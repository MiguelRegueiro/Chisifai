{"ast":null,"code":"// apiService.js - API service module to connect with FastAPI backend\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Generic API fetch function with error handling\nconst apiFetch = async endpoint => {\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching from ${endpoint}:`, error);\n    return null;\n  }\n};\n\n// Fetch telemetry data\nexport const fetchTelemetryData = async () => {\n  return (await apiFetch('/api/telemetry')) || [];\n};\n\n// Fetch KPIs\nexport const fetchKPIs = async () => {\n  return (await apiFetch('/api/kpis')) || {};\n};\n\n// Fetch alerts\nexport const fetchAlerts = async () => {\n  return (await apiFetch('/api/alerts')) || [];\n};\n\n// Fetch location data\nexport const fetchLocationData = async () => {\n  return (await apiFetch('/api/location')) || [];\n};\n\n// Fetch temperature data\nexport const fetchTemperatureData = async () => {\n  return (await apiFetch('/api/temperature')) || [];\n};\n\n// Fetch G-force data\nexport const fetchGForceData = async () => {\n  return (await apiFetch('/api/gforce')) || [];\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiFetch","endpoint","response","fetch","ok","Error","status","data","json","error","console","fetchTelemetryData","fetchKPIs","fetchAlerts","fetchLocationData","fetchTemperatureData","fetchGForceData"],"sources":["/home/regueiro/Chisifai/frontend-chisifai/src/services/apiService.js"],"sourcesContent":["// apiService.js - API service module to connect with FastAPI backend\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Generic API fetch function with error handling\nconst apiFetch = async (endpoint) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching from ${endpoint}:`, error);\n    return null;\n  }\n};\n\n// Fetch telemetry data\nexport const fetchTelemetryData = async () => {\n  return await apiFetch('/api/telemetry') || [];\n};\n\n// Fetch KPIs\nexport const fetchKPIs = async () => {\n  return await apiFetch('/api/kpis') || {};\n};\n\n// Fetch alerts\nexport const fetchAlerts = async () => {\n  return await apiFetch('/api/alerts') || [];\n};\n\n// Fetch location data\nexport const fetchLocationData = async () => {\n  return await apiFetch('/api/location') || [];\n};\n\n// Fetch temperature data\nexport const fetchTemperatureData = async () => {\n  return await apiFetch('/api/temperature') || [];\n};\n\n// Fetch G-force data\nexport const fetchGForceData = async () => {\n  return await apiFetch('/api/gforce') || [];\n};"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE7E;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,GAAGK,QAAQ,EAAE,CAAC;IAE1D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBR,QAAQ,GAAG,EAAEQ,KAAK,CAAC;IACxD,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,OAAO,OAAMX,QAAQ,CAAC,gBAAgB,CAAC,KAAI,EAAE;AAC/C,CAAC;;AAED;AACA,OAAO,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,OAAO,OAAMZ,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAO,OAAMb,QAAQ,CAAC,aAAa,CAAC,KAAI,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,OAAO,OAAMd,QAAQ,CAAC,eAAe,CAAC,KAAI,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,OAAO,OAAMf,QAAQ,CAAC,kBAAkB,CAAC,KAAI,EAAE;AACjD,CAAC;;AAED;AACA,OAAO,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,OAAO,OAAMhB,QAAQ,CAAC,aAAa,CAAC,KAAI,EAAE;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}