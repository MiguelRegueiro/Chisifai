{"ast":null,"code":"import _objectSpread from\"/home/regueiro/Chisifai/frontend-chisifai/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState}from'react';import{Card}from'react-bootstrap';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{Line}from'react-chartjs-2';import{useData}from'../contexts/DataContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const TemperatureChart=()=>{const{telemetryData,loading}=useData();const chartRef=useRef(null);const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Temperatura (째C)',data:[],borderColor:'rgb(255, 99, 132)',backgroundColor:'rgba(255, 99, 132, 0.5)',tension:0.1}]});// Update chart data when telemetry data changes\nuseEffect(()=>{if(telemetryData&&telemetryData.length>0&&!loading){// Use the timestamp from the first data point to represent the current update time\nconst currentTimestamp=new Date().toLocaleTimeString();// Calculate average temperature if multiple packages exist\nconst avgTemp=telemetryData.length>0?telemetryData.reduce((sum,item)=>sum+item.temperature,0)/telemetryData.length:0;// Update chart data\nsetChartData(prevData=>{// Only add new data point if it's different from the last one to prevent duplicates\nif(prevData.labels.length>0&&prevData.labels[prevData.labels.length-1]===currentTimestamp){return prevData;// Return previous data if timestamp is the same (avoid duplicate points)\n}const newLabels=[...prevData.labels.slice(-9),currentTimestamp];// Keep last 10 points\nconst newData=[...prevData.datasets[0].data.slice(-9),avgTemp];return{labels:newLabels,datasets:[_objectSpread(_objectSpread({},prevData.datasets[0]),{},{data:newData})]};});}},[telemetryData,loading]);const options={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Temperatura en Tiempo Real'}},scales:{y:{title:{display:true,text:'Temperatura (째C)'},min:0,max:10}},animation:{duration:300// Animation duration in milliseconds\n}};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Seguimiento de Temperatura\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Line,{ref:chartRef,options:options,data:chartData})})]});};export default TemperatureChart;","map":{"version":3,"names":["React","useEffect","useRef","useState","Card","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","useData","jsx","_jsx","jsxs","_jsxs","register","TemperatureChart","telemetryData","loading","chartRef","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","tension","length","currentTimestamp","Date","toLocaleTimeString","avgTemp","reduce","sum","item","temperature","prevData","newLabels","slice","newData","_objectSpread","options","responsive","plugins","legend","position","title","display","text","scales","y","min","max","animation","duration","children","Header","className","Body","ref"],"sources":["/home/regueiro/Chisifai/frontend-chisifai/src/components/TemperatureChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { useData } from '../contexts/DataContext';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst TemperatureChart = () => {\n  const { telemetryData, loading } = useData();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Temperatura (째C)',\n        data: [],\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        tension: 0.1,\n      },\n    ],\n  });\n\n  // Update chart data when telemetry data changes\n  useEffect(() => {\n    if (telemetryData && telemetryData.length > 0 && !loading) {\n      // Use the timestamp from the first data point to represent the current update time\n      const currentTimestamp = new Date().toLocaleTimeString();\n      // Calculate average temperature if multiple packages exist\n      const avgTemp = telemetryData.length > 0 \n        ? telemetryData.reduce((sum, item) => sum + item.temperature, 0) / telemetryData.length\n        : 0;\n      \n      // Update chart data\n      setChartData(prevData => {\n        // Only add new data point if it's different from the last one to prevent duplicates\n        if (prevData.labels.length > 0 && prevData.labels[prevData.labels.length - 1] === currentTimestamp) {\n          return prevData; // Return previous data if timestamp is the same (avoid duplicate points)\n        }\n        \n        const newLabels = [...prevData.labels.slice(-9), currentTimestamp]; // Keep last 10 points\n        const newData = [...prevData.datasets[0].data.slice(-9), avgTemp];\n        \n        return {\n          labels: newLabels,\n          datasets: [\n            {\n              ...prevData.datasets[0],\n              data: newData,\n            }\n          ]\n        };\n      });\n    }\n  }, [telemetryData, loading]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Temperatura en Tiempo Real',\n      },\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: 'Temperatura (째C)',\n        },\n        min: 0,\n        max: 10,\n      },\n    },\n    animation: {\n      duration: 300, // Animation duration in milliseconds\n    },\n  };\n\n  return (\n    <Card>\n      <Card.Header>\n        <h5 className=\"mb-0\">Seguimiento de Temperatura</h5>\n      </Card.Header>\n      <Card.Body>\n        <Line ref={chartRef} options={options} data={chartData} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TemperatureChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}