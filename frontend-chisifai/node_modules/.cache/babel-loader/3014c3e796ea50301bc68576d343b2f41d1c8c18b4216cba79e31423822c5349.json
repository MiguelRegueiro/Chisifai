{"ast":null,"code":"import _objectSpread from\"/home/regueiro/Chisifai/frontend-chisifai/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState}from'react';import{Card}from'react-bootstrap';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{Line}from'react-chartjs-2';import{useData}from'../contexts/DataContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const GForceChart=()=>{const{telemetryData,loading}=useData();const chartRef=useRef(null);const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Fuerza G',data:[],borderColor:'rgb(53, 162, 235)',backgroundColor:'rgba(53, 162, 235, 0.5)',tension:0.1}]});// Update chart data when telemetry data changes\nuseEffect(()=>{if(telemetryData&&telemetryData.length>0&&!loading){const latestReading=telemetryData[0];// Assuming first item is the most recent\n// Create new data point\nconst newTime=new Date().toLocaleTimeString();const newGForce=latestReading.gForce;// Update chart data\nsetChartData(prevData=>{const newLabels=[...prevData.labels.slice(-9),newTime];// Keep last 10 points\nconst newData=[...prevData.datasets[0].data.slice(-9),newGForce];return{labels:newLabels,datasets:[_objectSpread(_objectSpread({},prevData.datasets[0]),{},{data:newData})]};});}},[telemetryData,loading]);const options={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Fuerza G en Tiempo Real'}},scales:{y:{title:{display:true,text:'Fuerza G'},min:0,max:4}},animation:{duration:300// Animation duration in milliseconds\n}};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Seguimiento de Fuerza G\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Line,{ref:chartRef,options:options,data:chartData})})]});};export default GForceChart;","map":{"version":3,"names":["React","useEffect","useRef","useState","Card","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","useData","jsx","_jsx","jsxs","_jsxs","register","GForceChart","telemetryData","loading","chartRef","chartData","setChartData","labels","datasets","label","data","borderColor","backgroundColor","tension","length","latestReading","newTime","Date","toLocaleTimeString","newGForce","gForce","prevData","newLabels","slice","newData","_objectSpread","options","responsive","plugins","legend","position","title","display","text","scales","y","min","max","animation","duration","children","Header","className","Body","ref"],"sources":["/home/regueiro/Chisifai/frontend-chisifai/src/components/GForceChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { useData } from '../contexts/DataContext';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst GForceChart = () => {\n  const { telemetryData, loading } = useData();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Fuerza G',\n        data: [],\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        tension: 0.1,\n      },\n    ],\n  });\n\n  // Update chart data when telemetry data changes\n  useEffect(() => {\n    if (telemetryData && telemetryData.length > 0 && !loading) {\n      const latestReading = telemetryData[0]; // Assuming first item is the most recent\n      \n      // Create new data point\n      const newTime = new Date().toLocaleTimeString();\n      const newGForce = latestReading.gForce;\n      \n      // Update chart data\n      setChartData(prevData => {\n        const newLabels = [...prevData.labels.slice(-9), newTime]; // Keep last 10 points\n        const newData = [...prevData.datasets[0].data.slice(-9), newGForce];\n        \n        return {\n          labels: newLabels,\n          datasets: [\n            {\n              ...prevData.datasets[0],\n              data: newData,\n            }\n          ]\n        };\n      });\n    }\n  }, [telemetryData, loading]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Fuerza G en Tiempo Real',\n      },\n    },\n    scales: {\n      y: {\n        title: {\n          display: true,\n          text: 'Fuerza G',\n        },\n        min: 0,\n        max: 4,\n      },\n    },\n    animation: {\n      duration: 300, // Animation duration in milliseconds\n    },\n  };\n\n  return (\n    <Card>\n      <Card.Header>\n        <h5 className=\"mb-0\">Seguimiento de Fuerza G</h5>\n      </Card.Header>\n      <Card.Body>\n        <Line ref={chartRef} options={options} data={chartData} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default GForceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}